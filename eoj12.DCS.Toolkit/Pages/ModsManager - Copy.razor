@page "/Modsmanager2"
@using System.Net;
@using System.Net.Http
@using System.IO
@using System.Threading.Tasks
@using eoj12.DCS.Toolkit.Data;
@*@using RadzenDataGrid.Data;*@
@*@inject ModManagerService ModManagerService;*@
@*@using RadzenBlazorDemos.Data
@using RadzenBlazorDemos.Models.Northwind
@using Microsoft.EntityFrameworkCore

@inherits DbContextPage*@
<RadzenButton ButtonStyle="ButtonStyle.Success" Icon="add_circle_outline" class="mt-2 mb-4" Text="Add New Order" Click="@InsertRow" Disabled=@(modToInsert != null || modToUpdate != null) />

<RadzenDataGrid @ref="ModsGrid" AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="5" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
                Data="@ModDefinitionList" TItem="Mod" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or" RowCreate="@OnCreateRow">
    <Columns>
        <RadzenDataGridColumn TItem="Mod" Property="Title" Filterable="true" Title="Title"  />
@*        <Template Context="mod">
                @mod
            </Template>*@
           @* <EditTemplate Context="mod">
            <RadzenTextBox @bind-Value="mod.Title" Style="width:100%; display: block" Name="Title" />
            </EditTemplate>*@
        <RadzenDataGridColumn TItem="Mod" Property="Description" Title="Description" Frozen="true" Width="160px" />
        <RadzenDataGridColumn TItem="Mod" Property="Version" Title="Version" Frozen="true" Width="160px" />
        <RadzenDataGridColumn TItem="Mod" Property="Size" Title="Size" Frozen="true" Width="160px" />
        <RadzenDataGridColumn TItem="Mod" Property="TargetFolder" Title="TargetFolder" Frozen="true" Width="160px" />
       @* <RadzenDataGridColumn TItem="Employee" Title="Photo" Frozen="true" Sortable="false" Filterable="false" Width="80px" TextAlign="TextAlign.Center">
            <Template Context="data">
                <RadzenImage Path="@data.Photo" class="rz-gravatar" />
            </Template>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="Employee" Property="FirstName" Title="First Name" Frozen="true" Width="160px" />
        <RadzenDataGridColumn TItem="Employee" Property="LastName" Title="Last Name" Width="160px" />
        <RadzenDataGridColumn TItem="Employee" Property="Title" Title="Job Title" Width="200px" />
        <RadzenDataGridColumn TItem="Employee" Property="TitleOfCourtesy" Title="Title" Width="120px" />
        <RadzenDataGridColumn TItem="Employee" Property="BirthDate" Title="Birth Date" FormatString="{0:d}" Width="160px" />
        <RadzenDataGridColumn TItem="Employee" Property="HireDate" Title="Hire Date" FormatString="{0:d}" Width="160px" />
        <RadzenDataGridColumn TItem="Employee" Property="Address" Title="Address" Width="200px" />
        <RadzenDataGridColumn TItem="Employee" Property="City" Title="City" Width="160px" />
        <RadzenDataGridColumn TItem="Employee" Property="Region" Title="Region" Width="160px" />
        <RadzenDataGridColumn TItem="Employee" Property="PostalCode" Title="Postal Code" Width="160px" />
        <RadzenDataGridColumn TItem="Employee" Property="Country" Title="Country" Width="160px" />
        <RadzenDataGridColumn TItem="Employee" Property="HomePhone" Title="Home Phone" Width="160px" />
        <RadzenDataGridColumn TItem="Employee" Property="Extension" Title="Extension" Width="160px" />
        <RadzenDataGridColumn TItem="Employee" Property="Notes" Title="Notes" Width="300px" />*@
    </Columns>
</RadzenDataGrid>


@code {
    RadzenDataGrid<Mod> ModsGrid;
    private bool IsLoading = false;
    private bool IsReady = false;
    private string Url = "https://drive.google.com/uc?id=1AEDTUYVP9Zj0EEeEyjKBsLyLeifNQgr4&export=download";
    private List<Mod> ModDefinitionList= null;

    private ModManagerService modManagerService = new ModManagerService();
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        try
        {
            StateHasChanged();
            await Task.Run(() => ModDefinitionList =modManagerService.LocalDb.CopyMods());
            IsReady = true;
            StateHasChanged();
        }
        catch (Exception ex)
        {
            throw;
        }

    }
    Mod modToInsert;
    Mod modToUpdate;
    async Task InsertRow()
    {
        modToInsert = new Mod();
        await ModsGrid.InsertRow(modToInsert);
    }
    void OnCreateRow(Mod   mod)
    {
        ;
        //dbContext.Add(order);

        //dbContext.SaveChanges();

        //orderToInsert = null;
    }
    private async Task AddMod()
    {
        try
        {
            //IsLoading = true;
            //IsReady = false;
            //StateHasChanged();
            //var localMods = modManagerService.ScanMods();
            //ModDefinitionList = modManagerService.LocalDb.CopyMods();
            //IsReady = true;
            //IsLoading = false;
            //StateHasChanged();
        }
        catch (Exception ex)
        {
            throw;
        }
    }
}