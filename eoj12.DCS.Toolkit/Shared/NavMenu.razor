@using eoj12.DCS.Toolkit.Models;
@using eoj12.DCS.Toolkit.Services;
@inject IJSRuntime jsRuntime
<div class="top-row ps-3 navbar navbar-dark" style="height:5em">
    <div class="container-fluid">
        <a class="navbar-brand" href=""><img src="logo_wide.png" style="height:43px" /></a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span>My Mods
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="ModsSquadron">
                @*<span class="oi oi-plus" aria-hidden="true"></span>Squadron Mods*@
                <RadzenIcon Icon="groups" />&nbsp;&nbsp;Squadron Mods

            </NavLink>
        </div>
    </nav>
</div>


<div class="@NavMenuCssClass" style="position:relative;bottom:-webkit-calc(-100% + 300px)" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="AppSettings" Match="NavLinkMatch.All">
                <RadzenIcon Icon="settings" />&nbsp;&nbsp;Settings
            </NavLink>
        </div>
    </nav>
</div>


<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            @* @if (!string.IsNullOrEmpty(  LogoBase64)){ *@
            <RadzenImage id="logo" title="Logo" Src="@LogoBase64" style="width: 220px;" />
            @* } *@
        </div>
    </nav>
</div>


<script>
    setLogo = (logoBase64) => {
        var img;
        // access DOM here
        img = document.getElementById('logo');
        img.src = logoBase64;
        //set img invisible logoBase64 == null or empty
        if (logoBase64 == null || logoBase64 == "") {
            //img.style.display = "none";
            img.src = "/spacer.png";
        }
        else {
            img.src = logoBase64;
            //img.style.display = "block";
        } 
    };
</script>

@code {
    private bool collapseNavMenu = true;
    ElementReference ReferenceLogoImg;
    public string LogoBase64 { get; set; } 
    // string  logoDisplay ="none";

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        try
        {
            ModManagerService modManagerService = new ModManagerService();
            var settings = await modManagerService.GetSettings();
            if(!string.IsNullOrEmpty(settings.LogoBase64))
            {
                LogoBase64 = settings.LogoBase64;    
            }   
            else
                LogoBase64 = @"/spacer.png";
        }
        catch (Exception ex)
        {
            throw;
        }
        
    }


}
